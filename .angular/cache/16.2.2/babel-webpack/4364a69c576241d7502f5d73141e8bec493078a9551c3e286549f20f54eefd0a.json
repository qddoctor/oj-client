{"ast":null,"code":"var _class;\nimport { PROBLEMS } from \"../mock-problems\";\nimport * as i0 from \"@angular/core\";\nexport class DataService {\n  constructor() {}\n  getProblems() {\n    return PROBLEMS;\n  }\n  getProblem(id) {\n    return PROBLEMS.find(problem => problem.id === id);\n  }\n}\n_class = DataService;\n_class.ɵfac = function DataService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["PROBLEMS","DataService","constructor","getProblems","getProblem","id","find","problem","factory","ɵfac","providedIn"],"sources":["/home/raymondz/Projects/oj-client/src/app/services/data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {Problem} from \"../models/problem.model\";\nimport {PROBLEMS} from \"../mock-problems\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor() { }\n\n  getProblems(): Problem[] {\n    return PROBLEMS;\n  }\n\n  getProblem(id: number): Problem {\n    return <Problem>PROBLEMS.find((problem) => problem.id === id);\n  }\n\n}\n"],"mappings":";AAEA,SAAQA,QAAQ,QAAO,kBAAkB;;AAKzC,OAAM,MAAOC,WAAW;EAEtBC,YAAA,GAAgB;EAEhBC,WAAWA,CAAA;IACT,OAAOH,QAAQ;EACjB;EAEAI,UAAUA,CAACC,EAAU;IACnB,OAAgBL,QAAQ,CAACM,IAAI,CAAEC,OAAO,IAAKA,OAAO,CAACF,EAAE,KAAKA,EAAE,CAAC;EAC/D;;SAVWJ,WAAW;;mBAAXA,MAAW;AAAA;;SAAXA,MAAW;EAAAO,OAAA,EAAXP,MAAW,CAAAQ,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}